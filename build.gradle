apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'io.qameta.allure'
apply plugin: 'project-report'


tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.4"
    }
}


repositories {
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile group: 'com.squareup.retrofit2', name: 'retrofit', version:'2.2.0'
    compile group: 'com.squareup.retrofit2', name: 'converter-jackson', version:'2.3.0'
    compile group: 'org.yaml', name: 'snakeyaml', version:'1.18'
    compile group: 'io.qameta.allure', name: 'allure-junit5', version: '2.7.0'

    compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.21'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.3'

    compile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.0-M1'
    compile group: 'org.junit.platform', name: 'junit-platform-suite-api', version: '1.3.0-M1'
    compile group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.3.0-M1'

}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        exceptionFormat "full"
        events  "passed", "failed"
        displayGranularity = 0
    }
}


task runSuite(type: Test) {
    if (System.getProperty("suiteClass") == null)
        include '**/RegressStage.class'
    else
        include '**/' + System.getProperty("suiteClass") + '.class'
}


allure {
    version = '2.4.1'
    autoconfigure = true
}
